version: '3'
services:
  {{ docker_app_name }}:
    image: "{{ docker_image_app_server }}:{{ docker_image_tag_app_server }}"
    env_file:
      - {{ project_path }}/app.env
    restart: unless-stopped
    networks:
      - {{ traefik_network_name }}
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik_network_name }}"

      # Http router 'app-server'
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server.entrypoints=web"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server.service={{ env }}-{{ project_name }}-app-server"

      # Service 'app-server'
      - "traefik.http.services.{{ env }}-{{ project_name }}-app-server.loadbalancer.server.port=8000"
      - "traefik.http.services.{{ env }}-{{ project_name }}-app-server.loadbalancer.server.scheme=http"

      # Http router 'app-server-ws'
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server-ws.entrypoints=web"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server-ws.rule=PathPrefix(`/ws`)"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server-ws.service={{ env }}-{{ project_name }}-app-server-ws"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-app-server-ws.middlewares={{ env }}-{{ project_name }}-app-server-ws-upgrade"

      # Service 'app-server-ws'
      - "traefik.http.services.{{ env }}-{{ project_name }}-app-server-ws.loadbalancer.server.port=8001"
      - "traefik.http.services.{{ env }}-{{ project_name }}-app-server-ws.loadbalancer.server.scheme=http"

networks:
  {{ traefik_network_name }}:
    external: true
