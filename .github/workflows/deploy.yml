on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Action Type'
        required: true
        options:
          - deploy-backend
          - deploy-services
          - deploy-logger
      branch:
        description: 'Source Branch'
        required: true
        options:
          - main

jobs:
  deploy-main:
    if: ${{ inputs.branch }} == 'main'
    name: ${{ inputs.tag }}-main
    runs-on: ubuntu-latest
    env:
      DEPLOY_TAG: ${{ inputs.tag }}
      DEPLOY_BRANCH: ${{ inputs.branch }}
      FLASK_APP_APP_SECRET_KEY: ${{ secrets.FLASK_APP_APP_SECRET_KEY }}
      FLASK_APP_DATABASE_USER: ${{ secrets.FLASK_APP_DATABASE_USER }}
      FLASK_APP_DATABASE_PASS: ${{ secrets.FLASK_APP_DATABASE_PASS }}
      FLASK_APP_ELASTICSEARCH_PASS: ${{ secrets.FLASK_APP_ELASTICSEARCH_PASS }}
      FLASK_APP_KIBANA_SECRET_KEY: ${{ secrets.FLASK_APP_KIBANA_SECRET_KEY }}
      FLASK_APP_RABBITMQ_USER: ${{ secrets.FLASK_APP_RABBITMQ_USER }}
      FLASK_APP_RABBITMQ_PASS: ${{ secrets.FLASK_APP_RABBITMQ_PASS }}
    steps:
      - name: Cache Ansible
        id: cache-ansible
        uses: actions/cache@v3
        with:
          path: /etc/ansible
          key: ${{ runner.os }}-ansible

      - name: Install ansible 
        if: steps.cache-ansible.outputs.cache-hit != 'true'
        run: |
          sudo apt install -y software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible

      - name: Checkout infra repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.FLASK_APP_REGISTRY_USER }}
          password: ${{ secrets.FLASK_APP_REGISTRY_PASS }}

      - name: Add SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}

      - name: Run playbook
        run: >
          ansible-playbook 
          -i inventory/flask-app 
          -e env=main 
          -l main 
          -t $DEPLOY_TAG 
          -v playbook.yml

